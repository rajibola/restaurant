{"version":3,"sources":["serviceWorker.js","Card.js","CardList.js","foods.js","SearchBox.js","App.js","helpers.js","KitchenPicker.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","name","price","picture","className","id","src","alt","CardList","foods","cardComponent","map","user","i","key","time","SearchBox","searchfield","searchChange","onChange","type","placeholder","App","onSearchChange","event","setState","target","value","state","filteredFoods","this","filter","food","toLowerCase","includes","Component","rando","arr","Math","floor","random","length","getFunName","adjectives","KitchenPicker","preventDefault","console","log","storeInput","onSubmit","e","goToStore","required","defaultValue","ref","input","to","kitchenId","contextType","router","PropTypes","object","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91b23509.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './Card.css';\r\n\r\n\r\nconst Card = ({name, price, picture}) => {\r\n\treturn(\r\n\t\t<div className=\"tc bg-white dib ma2 hover-red container\" id=\"\">\r\n\t\t\t<div className=\"cardhead\">\r\n\t\t\t\t<img src={picture} alt=\"food-img\" id='pics' />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"\" id=\"cardbottom\" >\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"dtc pa2 f5 tl\"><span>&#8358;</span>{price}</h3>\r\n\t\t\t\t\t<h6 className=\"dtc tr\">{name}</h6>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ foods }) =>{\r\n\tconst cardComponent = foods.map((user, i)=> {\r\n\t\treturn <Card name= {foods[i].name}  price= {foods[i].price} key= {foods[i].id} picture= {foods[i].picture}/>\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{cardComponent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default CardList;","const foods = [\r\n\t{\r\n\t\tname: 'Rice and Beans',\r\n\t\tprice: '350',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQwg4oYlArqECG-XJmDEws7zaB3q9QOuCnZ-DOjfLb4ZCbKnOSA',\r\n\t\tid : 1\t\r\n\t},\r\n\t{\r\n\t\tname: 'Beans and Dodo',\r\n\t\tprice: '400',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://i2.wp.com/www.lifestyleofanaturalista.com/wp-content/uploads/2018/03/via-@matsecooks-jollof-beans.-jollof-beans-with-dodo-caramelized-onions-and-smoked-mackerel...with-c.jpg?resize=640%2C380',\r\n\t\tid : 2\t\t\r\n\t\r\n\t},\r\n\t{\r\n\t\tname: 'Pounded Yam and Egusi',\r\n\t\tprice: '450',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://1.bp.blogspot.com/-PetbXTgnM6Y/WcLEaIb1qDI/AAAAAAAAA5Q/1CyVYJ8q0Lw8CqHZEDPqrU2DBlN6xnnbwCLcBGAs/s320/images%2B%25288%2529.jpg',\r\n\t\tid : 3\t\r\n\t},\r\n\t{\r\n\t\tname: 'Tuwo and Gbegiri',\r\n\t\tprice: '400',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://sisijemimah.com/wp-content/uploads/2015/09/Gbegiri-Soup-1024x683.jpg',\r\n\t\tid : 4\t\r\n\t},\r\n\t{\r\n\t\tname: 'Semo and Egusi',\r\n\t\tprice: '400',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRoAEVUjRRQw_CC5rypOX5GegUCyd45fYtRYxmVdTU-NFtgT9nl',\r\n\t\tid : 5\t\r\n\t},\r\n\t{\r\n\t\tname: 'Abula',\r\n\t\tprice: '420',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTMzjFejHnupKb4ngTROMnl1gfDCCHfEFhsCT8I8ZpiTclLAAcm',\r\n\t\tid : 6\t\r\n\t},\r\n\t{\r\n\t\tname: 'Moin-moin',\r\n\t\tprice: '200',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQBNkltMku1ysal0ubpURMtp833BtvFTDxNpI4ixmGPOWIFlWcY',\r\n\t\tid : 7\t\r\n\t},\r\n\t{\r\n\t\tname: 'Masa',\r\n\t\tprice: '150',\r\n\t\ttime: '20min',\r\n\t\tpicture: 'https://i0.wp.com/www.glamtush.com/wp-content/uploads/2017/10/Masa-recipe.png?resize=660%2C365&ssl=1',\r\n\t\tid : 8\t\r\n\t}\r\n];\r\n\r\nexport default foods;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input onChange={searchChange} className=\"pa3 bg-transparent SBI\" type='search' placeholder='search for food'/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport foods from './foods';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tfoods: foods,\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredFoods = this.state.foods.filter(food =>{\r\n\t\t\treturn food.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<h1>Africa Timed Restaurant</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<CardList foods = { filteredFoods }/>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;","export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}","import React, { Component } from 'react';\r\nimport './KitchenPicker.css';\r\nimport {getFunName} from './helpers';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass KitchenPicker extends Component{\r\n\r\n\tgoToStore(event){\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log('u hv changed the URL');\r\n\t\tconsole.log(this.storeInput.value);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\r\n\t\t\t<div className='kitchen-div'>\r\n\t\t\t\t<div className='Kitchen-selector'>\r\n\t\t\t\t\t<form onSubmit={(e) => this.goToStore(e)}>\r\n\t\t\t\t\t<h2> ENTER KITCHEN NAME </h2>\r\n\t\t\t\t\t\t<input type='text' required placeholder='Kitchen Name' className='kinput' defaultValue={getFunName()} ref={(input) => {this.storeInput = input}}/>\r\n\t\t\t\t\t\t<Link className='link' to={`/kitchen/${this.goToStore.kitchenId}`}><button type= 'submit' className='kbutton'> visit kitchen </button></Link>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nKitchenPicker.contextType = {\r\n\trouter: PropTypes.object\r\n};\r\n\r\n\r\nexport default KitchenPicker;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App';\nimport KitchenPicker from './KitchenPicker';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst Root = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/' component={KitchenPicker} />\n\t\t\t\t<Route path='/kitchen/' component={App} />\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}